<?xml version="1.0" encoding="UTF-8"?><record_update table="sysauto_script">
    <sysauto_script action="INSERT_OR_UPDATE">
        <active>true</active>
        <business_calendar/>
        <condition/>
        <conditional>false</conditional>
        <entered_time>1970-01-01 00:00:00</entered_time>
        <name>Populate Azure Enterprise App Templates</name>
        <offset/>
        <offset_type/>
        <run_as display_value="System Administrator">6816f79cc0a8016401c5a33be04be441</run_as>
        <run_as_tz/>
        <run_dayofmonth>1</run_dayofmonth>
        <run_dayofweek>1</run_dayofweek>
        <run_period/>
        <run_start>2021-05-06 15:52:41</run_start>
        <run_time>1970-01-01 08:00:00</run_time>
        <run_type>daily</run_type>
        <script><![CDATA[var applicationTemplates;

try {
    var r = new sn_ws.RESTMessageV2('x_622642_azure_ent.Application Template Instantiate', 'Default GET');

    //override authentication profile 
    //authentication type ='basic'/ 'oauth2'
    //r.setAuthenticationProfile(authentication type, profile name);

    //set a MID server name if one wants to run the message on MID
    //r.setMIDServer('MY_MID_SERVER');

    //if the message is configured to communicate through ECC queue, either
    //by setting a MID server or calling executeAsync, one needs to set skip_sensor
    //to true. Otherwise, one may get an intermittent error that the response body is null
    //r.setEccParameter('skip_sensor', true);

    var response = r.execute();
    var responseBody = response.getBody();
    var httpStatus = response.getStatusCode();
    applicationTemplates = JSON.parse(responseBody);
} catch (ex) {
    var message = ex.message;
}


var savedAppsRecord = new GlideRecord('x_622642_azure_ent_azure_enterprise_app_templates');
savedAppsRecord.query(); // Issue the query to the database to get all records 

while (savedAppsRecord.next()) {
	savedAppTemplateIds.push({
		id: savedAppsRecord.id,
	})
}

for(var i = 0; i < applicationTemplates.length; i++) {
	templateAlreadyExists = false;
	for (var j = 0; j < savedAppTemplateIds.length; j++) {
		if (applicationTemplates[i].id === savedTemplateIds[j].id) {
			templateAlreadyExists = true;
			break;
		}
	}
	if (!templateAlreadyExists) {
		var newTemplate = new GlideRecord('x_622642_azure_ent_azure_enterprise_app_templates');
		newTemplate.ID = applicationTemplates[i].id;
		newTemplate.Description = applicationTemplates[i].description;
		newTemplate.homePageUrl = applicationTemplates[i].homePageUrl;
		newTemplate.displayName = applicationTemplates[i].displayName;
		newTemplate.logoUrl = applicationTemplates[i].logoUrl;
		newTemplate.Publisher = applicationTemplates[i].publisher;
		newTemplate.categories = applicationTemplates[i].Categories;
		newTemplate.update();
	}
}
]]></script>
        <sys_class_name>sysauto_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-05-06 16:07:08</sys_created_on>
        <sys_id>fa7067c0074030103774f61d7c1ed02a</sys_id>
        <sys_mod_count>6</sys_mod_count>
        <sys_name>Populate Azure Enterprise App Templates</sys_name>
        <sys_package display_value="Azure Enterprise Apps" source="x_622642_azure_ent">57e9f137073320103774f61d7c1ed002</sys_package>
        <sys_policy/>
        <sys_scope display_value="Azure Enterprise Apps">57e9f137073320103774f61d7c1ed002</sys_scope>
        <sys_update_name>sysauto_script_fa7067c0074030103774f61d7c1ed02a</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-05-06 16:45:40</sys_updated_on>
        <time_zone/>
        <upgrade_safe>false</upgrade_safe>
    </sysauto_script>
</record_update>
